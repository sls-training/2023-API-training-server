openapi: 3.1.0

info:
  title: シンプルなオンラインストレージサービス提供用API
  description: 本APIは、APIとはなにか、どのようにして作成するのかを学ぶためのものである。
  termsOfService: http://localhost:{PORT}/
  version: 0.0.0

components:
  parameters:
  schemas:
    error:
      type: object
      properties:
        status:
          $ref: '#/components/schemas/problemDetailsStatus'
        title:
          $ref: '#/components/schemas/problemDetailsTitle'
        errors:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: エラーが発生した対象の名前が格納される。
              message:
                type: string
                description: 発生したエラーの詳細が格納される。
            required:
              - name
              - reason
            description: 発生した1つのエラーに関する情報が格納される。
          description: 同時に発生したエラー全ての情報が格納される。
      required:
        - status
        - errors
    problemDetailsStatus:
      type: integer
      description: |
        エラー発生時のHTTPステータスと同じ値になる。

        https://datatracker.ietf.org/doc/html/rfc7807#section-3.1
    problemDetailsTitle:
      type: string
      description: |
        エラーに関する対人可読な短い説明文が格納される。

        https://datatracker.ietf.org/doc/html/rfc7807#section-3.1
    problemDetailsDetail:
      type: string
      description: |
        エラーに関する対人可読な説明文が格納される。

        https://datatracker.ietf.org/doc/html/rfc7807#section-3.1

paths:
  /signin:
    post:
      summary: 認証したユーザにアクセストークンを発行する。
      description: OAuth2.0のResource Owner Password Credential grant方式で、かつクライアント認証なしでのアクセストークンの発行を行う。
      operationId: LoginUser
      requestBody:
        description: |
          OAuth2.0のResource Owner Password Credential grant方式によるアクセストークンリクエスト時に必要となるパラメータを格納する。
          なお、UTF-8でエンコードされている必要がある。

          https://datatracker.ietf.org/doc/html/rfc6749#section-4.3.2
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                grant_type:
                  type: string
                  enum:
                    - password
                  description: 認可サーバに要求するグラントのタイプである。ここではResource Owner Password Credential grant方式を利用するため、値は `password` である必要がある。
                username:
                  type: string
                  description: アクセストークンの要求に利用するリソースオーナーのユーザ名である。
                password:
                  type: string
                  description: アクセストークンの要求に利用するリソースオーナーのパスワードである。
                scope:
                  type: string
                  description: 要求するアクセストークンのスコープである。
              required:
                - grant_type
                - user_name
                - password
        required: true
      responses:
        '200':
          description: |
            ログインに成功してアクセストークンが発行されたことを意味する。

            https://datatracker.ietf.org/doc/html/rfc6749#section-5.1
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                    description: 認可サーバから発行されたアクセストークンである。
                  token_type:
                    type: string
                    description: 発行されたアクセストークンの種類である。トークンをどのようにして利用するかを示す。
                  expires_in:
                    type: integer
                    format: int64
                    description: アクセストークンが発行されてから失効するまでの有効期間を示す。単位は秒である。
                  scope:
                    type: string
                    description: 発行されたアクセストークンのスコープを示す。省略されている場合は、リクエストしたスコープと同じであることを意味する。
                required:
                  - access_token
                  - token_type
              examples:
                successful_login:
                  summary: ログインに成功してアクセストークンが発行された
                  value:
                    {
                      "access_token": "zNxoOIF7F9FEifI2",
                      "token_type": "bearer",
                      "expires_in": 3600
                    }
        '400':
          description: |
            ログインに失敗してアクセストークンが発行されなかったことを意味する。

            https://datatracker.ietf.org/doc/html/rfc6749#section-5.2
          content:
            application/problem+json:
              schema:
                type: object
                properties:
                  status:
                    $ref: '#/components/schemas/problemDetailsStatus'
                  title:
                    $ref: '#/components/schemas/problemDetailsTitle'
                  detail:
                    # NOTE: 役割としては https://datatracker.ietf.org/doc/html/rfc6749#section-5.2 に定義されている任意のフィールドである `error_description` と同様である。
                    # 場合によっては、互換性のために値は `detail` フィールドと同値である `error_description` フィールドを追加する必要があるかもしれない。
                    $ref: '#/components/schemas/problemDetailsDetail'
                  error:
                    type: string
                    enum:
                      - invalid_request
                      - invalid_grant
                      - unsupported_grant_type
                      - invalid_scope
                    description: 失敗した理由を示すエラーコードである。
                required:
                  - status
                  - title
                  - error
  /signout:
    delete:
      summary: ユーザとしてログアウトする
  /files:
    get:
      summary: アップロードされたファイル一覧を返す
    post:
      summary: 新しいファイルをアップロードする
  /files/{fileId}:
    get:
      summary: ファイル名やその説明文、あるいはファイル自身などファイルの情報を返す
    patch:
      summary: ファイルの情報を更新する
    delete:
      summary: アップロードされているファイルを削除する
    parameters:
      - name: fileId
  /user:
    get:
      summary: 現在自分がログインしているユーザの情報を返す
    post:
      summary: 新しいユーザを作成する
      operationId: CreateUser
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                name:
                  description: 作成するユーザの表示名である。一意である必要はない。
                  type: string
                  minimum: 1
                  maximum: 64
                  examples:
                    ieyasu:
                      summary: 日本語名
                      value: 徳川家康
                    washington:
                      summary: 英語名
                      value: George Washington
                    anthony:
                      summary: ハンドルネーム
                      value: ad
                email:
                  description: 作成するユーザを識別するメールアドレスである。一意である必要がある。
                  type: string
                  format: email
                  examples:
                    gmail:
                      summary: Gmailのメールアドレスの例
                      value: foo.bar@gmail.com
                password:
                  description: 作成するユーザを認証するパスワードである。
                  type: string
                  format: password
                  minimum: 16
                  maximum: 128
                  examples:
                    naive_password:
                      summary: 単純なパスワード
                      value: abcdefghijklmnop
              requires:
                - name
                - email
                - password
      responses:
        '201':
          description: ユーザ作成に成功したことを意味する。
        '422':
          description: ユーザ作成に失敗したことを意味する。
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/error'
              examples:
                empty_name:
                  summary: ユーザの表示名が空白である。
                  value:
                    {
                      "status": 422,
                      "title": "Validation error for user",
                      "errors": [
                        { "name": "name", "reason": "The name is empty." }
                      ]
                    }
                invalid_email:
                  summary: メールアドレスが不正な形式である。
                  value:
                    {
                      "status": 422,
                      "title": "Validation error for user",
                      "errors": [
                        { "name": "email", "reason": "The email has an invalid form." }
                      ]
                    }
                not_unique_email:
                  summary: 同じメールアドレスが既に登録されている。
                  value:
                    {
                      "status": 422,
                      "title": "Validation error for user",
                      "errors": [
                        { "name": "email", "reason": "The email has already been registered." }
                      ]
                    }
                too_short_password:
                  summary: パスワードが短すぎる。
                  value:
                    {
                      "status": 422,
                      "title": "Validation error for user",
                      "errors": [
                        { "name": "password", "reason": "The password is too short." }
                      ]
                    }
    patch:
      summary: 現在自分がログインしているユーザの情報を更新する
    delete:
      summary: 現在自分がログインしているユーザの情報を削除する
